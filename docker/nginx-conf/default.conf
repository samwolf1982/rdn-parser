#http://nginx.org/ru/docs/varindex.html
    upstream backend {

        server php-fpm:9000;
        server php-fpm2:9000;
    }

    upstream frontend {
        server node:3000;
    }

    upstream socketbackend {
        least_conn; 
        server node:6001;
        ##server node2:6001;
    }


server {

    listen 3001 ssl http2;
    listen [::]:3001 ssl http2;
    server_name localhost front.local.com;

    index index.php index.html;
    server_tokens off;
    ssl_certificate /etc/letsencrypt/ssl/localhost.crt;
    ssl_certificate_key  /etc/letsencrypt/ssl/localhost.key;
    ssl_buffer_size 8k;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
    #return 507;
                proxy_set_header Host            $http_host;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_pass http://node:3001$uri?$args;
    }
    location /js/client.js {
    proxy_pass http://node:3001/js/client.js ;
    #return 507;
     #   root /var/www/app-front/build;
      #  try_files $uri $args =404;
    }

            #sockets
            location ~^/(ws|sockjs-node|socket.io) {
                    proxy_pass http://node:3001;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
            }



    #root /var/www/app-front/build/public;
    #root /var/www/app-front/build;

    #location /static/js/ {
    #  root /var/www/app-front/build;
    #   rewrite ^/static/js(/.*)$ $1 last;
    #   try_files $uri $args =404;
    #  # try_files $uri $uri/ =404;
    #}


}

server {
    listen 80;
    index index.php index.html;
    root /var/www;



   #location /admin-2 {
   #    root /var/www/public/admin/build;
   #    try_files $uri $uri/index.html index.html;
   #}

     location / {
                proxy_set_header Host            $http_host;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_pass http://node:3000$uri?$args;
        }

        location ~ ^/api(/?)(.*)/?$ {
            root /var/www/app-back;
            try_files $uri $uri/ /public/index.php?req=$1&$args;
        }

     location /api2 {
             # fastcgi_split_path_info ^(.+\.php)(/.*)$;
            ##  fastcgi_pass   php-fpm:9000;
              fastcgi_pass   backend;
              fastcgi_index   index.php;
              include fastcgi_params;
              fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
              fastcgi_param  PATH_INFO    $fastcgi_path_info;
 #         index index.php index.html;
 #         root /var/www/app-back;
  #        fastcgi_split_path_info ^(.+\.php)(/.*)$;
   #       try_files $uri $uri/ /apiv1.php?$args;
        }





      # location /api {
      #  try_files $uri /index.php?$args;
      #}


    location ~ \.php$ {
         fastcgi_split_path_info ^(.+\.php)(/.*)$;
       ##  fastcgi_pass   php-fpm:9000;
         fastcgi_pass   backend;
         fastcgi_index   index.php;
         include fastcgi_params;
         fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
         fastcgi_param  PATH_INFO    $fastcgi_path_info;

    }

    location /index-test-env.php {
         fastcgi_split_path_info ^(.+\.php)(/.*)$;
         
       ##  fastcgi_pass   php-fpm:9000;
         fastcgi_pass   backend;


         fastcgi_index   index.php;
         include fastcgi_params;
         fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
         fastcgi_param  PATH_INFO    $fastcgi_path_info;

    }


}

server {

        listen 443 ssl http2;
        listen [::]:443 ssl http2;
       ## server_name bixex.local.com;
        server_name front.local.com;
        try_files $uri @proxy;

        ## gzip
          # включаем сжатие
            gzip on;
            gzip_comp_level 8;
            gzip_disable "msie6";
            gzip_types application/javascript text/plain  text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        ## gzip

        server_tokens off;
        ssl_certificate /etc/letsencrypt/ssl/localhost.crt;
        ssl_certificate_key  /etc/letsencrypt/ssl/localhost.key;

        ssl_buffer_size 8k;

        #ssl_dhparam /etc/letsencrypt/ssl/localhost.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
       # resolver 8.8.8.8;



        location / {
                proxy_set_header Host            $http_host;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_pass http://node:3000$uri?$args;
        }
        location /ws {
                proxy_pass http://node:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
        }

        location /sockjs-node {
                proxy_pass http://node:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
        }



        location /socket.io {
                #proxy_pass http://node:6001;
                  proxy_pass http://socketbackend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

}

server {

        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.local.com;
        client_max_body_size 32m;
     #   add_header Access-Control-Allow-Origin *;


 #        add_header 'Access-Control-Allow-Origin' '*' always;
  #       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
   #      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    #     add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

       # root /var/www/app-back/public;

        server_tokens off;
        ssl_certificate /etc/letsencrypt/ssl/localhost.crt;
        ssl_certificate_key  /etc/letsencrypt/ssl/localhost.key;
        ssl_buffer_size 8k;
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
       # resolver 8.8.8.8;

           location / {
            # root /var/www/app-back/public; some@gmail.com
            # autoindex on;
           #  autoindex_exact_size off;
               #return 507;
            #   add_header Access-Control-Allow-Origin *;
               try_files $uri $uri/ /index.php?$query_string;
               gzip_static on;
           }
            location ~*\.(js|jpg|png|css|svg)$ {
                    root /var/www/app-back/public;
                    try_files $uri $uri/ /index.php?$query_string;
                    gzip_static on;
               }

       location ~ \.php$ {
              # root /var/www/app-back/public;
               #try_files $uri =404;
            #   add_header Access-Control-Allow-Origin *;
               fastcgi_split_path_info ^(.+\.php)(/.+)$;
               fastcgi_pass php-fpm:9000;
               #fastcgi_pass apch:80;
               fastcgi_index index.php;
               include fastcgi_params;
              # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
               fastcgi_param SCRIPT_FILENAME /var/www/public$fastcgi_script_name;
               fastcgi_param PATH_INFO $fastcgi_path_info;
           }

}



   # location / {
   #     try_files $uri /index.php?$args;
   #}




